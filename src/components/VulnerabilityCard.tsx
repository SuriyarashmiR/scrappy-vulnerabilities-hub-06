
import React, { useState } from 'react';
import { Info, ChevronDown, ChevronUp, Shield, AlertTriangle } from 'lucide-react';
import { cn } from '@/lib/utils';

export interface Vulnerability {
  id: string;
  type: 'warning' | 'info';
  description: string;
}

interface VulnerabilityCardProps {
  company: string;
  logo: string;
  grade: string;
  vulnerabilities: Vulnerability[];
  animationDelay?: number;
}

const VulnerabilityCard: React.FC<VulnerabilityCardProps> = ({
  company,
  logo,
  grade,
  vulnerabilities,
  animationDelay = 0
}) => {
  const [expanded, setExpanded] = useState(false);

  const getVulnerabilityBgColor = (type: 'warning' | 'info') => {
    return type === 'warning' ? 'bg-red-100 dark:bg-red-900/30' : 'bg-amber-50 dark:bg-amber-900/30';
  };

  const getVulnerabilityIcon = (type: 'warning' | 'info') => {
    return type === 'warning' ? (
      <AlertTriangle className="mr-2 text-scraper-red" size={18} />
    ) : (
      <Info className="mr-2 text-amber-500" size={18} />
    );
  };

  return (
    <div 
      className="w-full rounded-xl bg-white dark:bg-gray-800 overflow-hidden card-shadow transition-all duration-300 animate-fade-up"
      style={{ 
        animationDelay: `${animationDelay}s`,
        transform: expanded ? 'scale(1.01)' : 'scale(1)'
      }}
    >
      <div className="p-5">
        <div className="flex items-center justify-between">
          <div className="flex items-center">
            <div className="w-12 h-12 flex items-center justify-center rounded-full overflow-hidden bg-white dark:bg-gray-700 border border-gray-100 dark:border-gray-600">
              <img src={logo} alt={`${company} logo`} className="w-10 h-10 object-contain" />
            </div>
            <h3 className="ml-4 text-xl font-medium dark:text-white">{company}</h3>
          </div>
          <div className="flex items-center space-x-2">
            <div className={cn(
              "px-3 py-1 rounded-md text-white font-medium",
              grade === "Grade E" ? "bg-scraper-red" : "bg-green-500"
            )}>
              {grade}
            </div>
            <button 
              onClick={() => setExpanded(!expanded)}
              className="p-2 rounded-full hover:bg-gray-100 dark:hover:bg-gray-700 transition-colors"
            >
              {expanded ? <ChevronUp size={20} /> : <ChevronDown size={20} />}
            </button>
          </div>
        </div>

        <div className={cn(
          "mt-4 transition-all duration-300 overflow-hidden",
          expanded ? "max-h-[1000px] opacity-100" : "max-h-0 opacity-0"
        )}>
          {vulnerabilities.map((vulnerability) => (
            <div 
              key={vulnerability.id}
              className={cn(
                "p-3 my-2 rounded-lg flex items-start",
                getVulnerabilityBgColor(vulnerability.type),
                "stagger-item"
              )}
            >
              {getVulnerabilityIcon(vulnerability.type)}
              <span className="dark:text-white">{vulnerability.description}</span>
            </div>
          ))}
        </div>

        <div className="mt-4">
          <button className="w-full flex items-center justify-center px-4 py-3 bg-scraper-blue text-white rounded-lg hover:bg-blue-500 transition-colors">
            <Info className="mr-2" size={18} />
            View Details
          </button>
        </div>
      </div>
    </div>
  );
};

export default VulnerabilityCard;
